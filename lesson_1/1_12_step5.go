package main

import "fmt"

/*
Внутри функции main (объявлять функцию не нужно) необходимо написать программу:
На первом этапе на стандартный ввод подается 10 целых положительных чисел, которые должны быть записаны в порядке ввода в массив из 10 элементов.
Тип чисел, входящих в массив, должен соответствовать минимально возможному целому беззнаковому числу. Имя массива который вы должны сами создать workArray (условие обязательное). Для чтения из стандартного ввода уже импортирован пакет fmt.

На втором этапе на стандартный ввод подаются еще 3 пары чисел - индексы элементов этого массива, которые требуется поменять местами (если такая пара чисел 3 и 7, значит в массиве элемент с 3 индексом нужно поменять местами с элементом, индекс которого 7).
Элементы полученного массива должны быть выведены через пробел на стандартный вывод. Далее автоматически будет проведена проверка используемых типов, результат которой будет добавлен к вашему ответу.
*/

func main() {
	// Создаем массив из 10 элементов типа uint8
	var workArray [10]uint8

	// Считываем 10 положительных целых чисел и записываем их в массив
	for i := 0; i < 10; i++ {
		fmt.Scan(&workArray[i])
	}

	// Считываем три пары индексов и меняем соответствующие элементы массива местами
	for i := 0; i < 3; i++ {
		var firstIndex, secondIndex int
		fmt.Scan(&firstIndex, &secondIndex)

		// Меняем местами элементы в массиве
		workArray[firstIndex], workArray[secondIndex] = workArray[secondIndex], workArray[firstIndex]
	}

	// Выводим элементы массива через пробел
	for _, value := range workArray {
		fmt.Printf("%d ", value)
	}

	// Добавляем вывод "type ok"
	fmt.Println("type ok")
}
